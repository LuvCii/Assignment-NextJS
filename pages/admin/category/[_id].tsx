/* eslint-disable @next/next/no-sync-scripts */
import React, { useEffect } from 'react'
import LayoutAdmin from '../../../components/Layout/admin'
import useCategories from '../../../hooks/use-category'
import {SubmitHandler, useForm} from 'react-hook-form'
import toastr from 'toastr'
import { useRouter } from 'next/router'
import Head from 'next/head'
import { categoryType } from '../../../models/category'
import { getCate, listCate } from '../../../api/category'
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
// type Inputs = {
//   name:string
// }

const EditCate = () => {
  const router = useRouter()
  const {update} = useCategories()
  const { _id} = router.query
  const {register, handleSubmit, formState: {errors}, reset} = useForm<categoryType>()
  useEffect(() => {
    (async() => {
      const category = await getCate(_id)
      reset(category)
    })()
  },[])
  
  
  const onSubmit: SubmitHandler<categoryType> = async (category) => {
    const data = await update(category)
    toast.success("Sửa danh mục thành công, chờ 2s để chuyển trang")
    setTimeout(() => {
      
    router.push("/admin/category")

    },2000)
  }
  return (
    <div>

<Head>
        <title>Admin AddCategory</title>
        <meta name='description' content='Generated by create next app' />
        <link rel="icon" href="/favicon.ico" />
        {/* <link href="toastr.css" rel="stylesheet"/> */}
      </Head>
    <div className="h-full ml-14 mt-14 mb-10 md:ml-64 min-h-screen flex flex-col flex-auto flex-shrink-0 antialiased bg-white dark:bg-gray-700 text-black dark:text-white">
      <div className="mt-4 mx-4">
        <div className="max-w-5xl mx-auto">
          <form onSubmit={handleSubmit(onSubmit)}>
            <div className="relative z-0 mb-6 w-full group">
              <input
                type="text"
                {...register("name", {required:true, minLength:5})}
                className="block py-2.5 px-0 w-full text-sm text-gray-500 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                required
              />
              {errors.name && errors.name.type === "required" && (<span style={{ color:"red"}}>This field is required</span>)}
              {errors.name && errors.name.type === "minLength" && (<span style={{color:"red"}}>Enter at least 5 characters</span>)}
              <label
                htmlFor=""
                className="absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
              >
                Name
              </label>
            </div>
            
            <button
              type="submit"
              className="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
            >
              Edit
            </button>
          </form>
        </div>
      </div>
    </div>
    <ToastContainer />
    </div>
  )
}
EditCate.Layout = LayoutAdmin

export default EditCate